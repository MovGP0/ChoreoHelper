<reactiveUi:ReactiveUserControl 
    x:TypeArguments="local:TransitionViewModel"
    x:Class="ChoreoHelper.Transition.TransitionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:reactiveUi="http://reactiveui.net"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:design="clr-namespace:ChoreoHelper.Design;assembly=ChoreoHelper.Design"
    xmlns:search="clr-namespace:ChoreoHelper.I18N;assembly=ChoreoHelper.I18N"
    xmlns:local="clr-namespace:ChoreoHelper.Transition"
    xmlns:distance="clr-namespace:ChoreoHelper.Distance;assembly=ChoreoHelper.Distance"
    xmlns:viewModels="clr-namespace:ChoreoHelper.Restriction;assembly=ChoreoHelper.Restriction"
    mc:Ignorable="d"
    TextElement.FontWeight="Regular"
    TextElement.FontSize="12"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    d:DataContext="{d:DesignInstance local:TransitionViewModel, IsDesignTimeCreatable=True}"
    DataContext="{Binding Path=ViewModel, RelativeSource={RelativeSource Self}}"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <design:ResourceDictionaryProvider />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="4"
               Content="{Binding FromFigureName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
        <Label Grid.Row="1" Grid.Column="0" Margin="4"
               Content="{materialDesign:PackIcon Kind=ArrowRightBottomBold}" />
        <Label Grid.Row="1" Grid.Column="1" Margin="4"
               Content="{Binding ToFigureName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <GroupBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Header="{x:Static search:ControlResources.Distance}" Margin="4">
            <ComboBox Margin="4" 
                      ItemsSource="{Binding Distances, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding SelectedDistance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type distance:DistanceViewModel}">
                        <Label Content="{Binding Description}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </GroupBox>
        <GroupBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Header="{x:Static search:ControlResources.Restrictions}" Margin="4">
            <ComboBox
                Margin="4"
                ItemsSource="{Binding Restrictions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding SelectedRestriction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewModels:RestrictionViewModel}">
                        <Label Content="{Binding Description}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </GroupBox>
        <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0" Grid.Column="0" Margin="4"
                    Content="{x:Static search:ControlResources.OK}"
                    IsDefault="True"
                    Command="{Binding SaveAndNavigateBack, UpdateSourceTrigger=PropertyChanged}" />
            <Button Grid.Row="0" Grid.Column="1" Margin="4"
                    Content="{x:Static search:ControlResources.Cancel}"
                    IsCancel="True"
                    Command="{Binding NavigateBack, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
    </Grid>
</reactiveUi:ReactiveUserControl>
